/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  MembershipManager,
  MembershipManagerInterface,
} from "../MembershipManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricePerPeriod",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "durationPerPeriodSeconds",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "newExpiry",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodsPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountWei",
        type: "uint256",
      },
    ],
    name: "MembershipPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "pricePerPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "durationPerPeriod",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "PlanUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "becomeMember",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMember",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "membershipExpiresAt",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "plan",
    outputs: [
      {
        internalType: "uint256",
        name: "pricePerPeriod",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "durationPerPeriod",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renewMembership",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "pricePerPeriod",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "durationPerPeriodSeconds",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    name: "updatePlan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610abf380380610abf83398101604081905261002f9161015f565b6100383361010f565b6000816001600160401b0316116100825760405162461bcd60e51b815260206004820152600a60248201526906475726174696f6e3d360b41b604482015260640160405180910390fd5b60408051606080820183528482526001600160401b03841660208084018290526001938501849052868455600280546001600160481b031916831768010000000000000000179055845187815290810191909152928301919091527fd0c77c7d7071382a0409799c0bf9501926ee67c12df7385535ae6ad9a69201cc910160405180910390a1505061019c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561017257600080fd5b825160208401519092506001600160401b038116811461019157600080fd5b809150509250929050565b610914806101ab6000396000f3fe6080604052600436106100865760003560e01c80639d083222116100595780639d08322214610170578063a230c52414610178578063c20ae979146101cd578063f2fde38b146101ed578063f3fef3a31461020d57600080fd5b8063170032d91461008b57806353e06571146100de57806361a9c7df146101335780638da5cb5b14610148575b600080fd5b34801561009757600080fd5b506100c16100a6366004610763565b6003602052600090815260409020546001600160401b031681565b6040516001600160401b0390911681526020015b60405180910390f35b3480156100ea57600080fd5b5060015460025461010e91906001600160401b03811690600160401b900460ff1683565b604080519384526001600160401b0390921660208401521515908201526060016100d5565b610146610141366004610763565b61022d565b005b34801561015457600080fd5b506000546040516001600160a01b0390911681526020016100d5565b61014661023a565b34801561018457600080fd5b506101bd610193366004610763565b6001600160a01b03166000908152600360205260409020546001600160401b034281169116101590565b60405190151581526020016100d5565b3480156101d957600080fd5b506101466101e8366004610785565b610246565b3480156101f957600080fd5b50610146610208366004610763565b61035b565b34801561021957600080fd5b506101466102283660046107d8565b610402565b6102378134610514565b50565b6102443334610514565b565b336102596000546001600160a01b031690565b6001600160a01b0316146102885760405162461bcd60e51b815260040161027f90610802565b60405180910390fd5b6000826001600160401b0316116102ce5760405162461bcd60e51b815260206004820152600a60248201526906475726174696f6e3d360b41b604482015260640161027f565b60408051606080820183528582526001600160401b038516602080840182905285151593850184905260018890556002805468ffffffffffffffffff19168317600160401b8602179055845188815290810191909152928301919091527fd0c77c7d7071382a0409799c0bf9501926ee67c12df7385535ae6ad9a69201cc910160405180910390a1505050565b3361036e6000546001600160a01b031690565b6001600160a01b0316146103945760405162461bcd60e51b815260040161027f90610802565b6001600160a01b0381166103f95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027f565b610237816106f7565b336104156000546001600160a01b031690565b6001600160a01b03161461043b5760405162461bcd60e51b815260040161027f90610802565b6001600160a01b03821661047a5760405162461bcd60e51b815260040161027f906020808252600490820152630746f3d360e41b604082015260600190565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146104c7576040519150601f19603f3d011682016040523d82523d6000602084013e6104cc565b606091505b505090508061050f5760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b604482015260640161027f565b505050565b600254600160401b900460ff1661055d5760405162461bcd60e51b815260206004820152600d60248201526c706c616e20696e61637469766560981b604482015260640161027f565b6001548110156105a55760405162461bcd60e51b81526020600482015260136024820152721a5b9cdd59999a58da595b9d08185b5bdd5b9d606a1b604482015260640161027f565b6001546000906105b5908361084d565b6002549091506000906105d1906001600160401b03168361086f565b90506000816001600160401b0316116106195760405162461bcd60e51b815260206004820152600a6024820152696e6f20706572696f647360b01b604482015260640161027f565b6001600160a01b0384166000908152600360205260408120546001600160401b0390811691904216821161064d574261064f565b815b9050600061065d848361089a565b6001600160a01b0388166000818152600360205260409020805467ffffffffffffffff19166001600160401b038416179055600154919250907ff4bdfc6f64daad4082799a67b6655814d7c06e87479d378bc40efe1eaf21a55c90839088906106c690826108c1565b604080516001600160401b03909416845260208401929092529082015260600160405180910390a250505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461075e57600080fd5b919050565b60006020828403121561077557600080fd5b61077e82610747565b9392505050565b60008060006060848603121561079a57600080fd5b8335925060208401356001600160401b03811681146107b857600080fd5b9150604084013580151581146107cd57600080fd5b809150509250925092565b600080604083850312156107eb57600080fd5b6107f483610747565b946020939093013593505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008261086a57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160401b0381811683821602808216919082811461089257610892610837565b505092915050565b6001600160401b038181168382160190808211156108ba576108ba610837565b5092915050565b80820281158282048414176108d8576108d8610837565b9291505056fea26469706673582212204a3b7727b98cbada8028bcb999421f9c28c9def3ec0968e2de5ee4de8bbabeec64736f6c63430008140033";

type MembershipManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembershipManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MembershipManager__factory extends ContractFactory {
  constructor(...args: MembershipManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    pricePerPeriod: BigNumberish,
    durationPerPeriodSeconds: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      pricePerPeriod,
      durationPerPeriodSeconds,
      overrides || {}
    );
  }
  override deploy(
    pricePerPeriod: BigNumberish,
    durationPerPeriodSeconds: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      pricePerPeriod,
      durationPerPeriodSeconds,
      overrides || {}
    ) as Promise<
      MembershipManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MembershipManager__factory {
    return super.connect(runner) as MembershipManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembershipManagerInterface {
    return new Interface(_abi) as MembershipManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MembershipManager {
    return new Contract(address, _abi, runner) as unknown as MembershipManager;
  }
}
